
120B_final_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  000002f8  0000038c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800122  00800122  000003ae  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003ae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000420  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001464  00000000  00000000  00000508  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a23  00000000  00000000  0000196c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a11  00000000  00000000  0000238f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000238  00000000  00000000  00002da0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007e1  00000000  00000000  00002fd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e4e  00000000  00000000  000037b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00004607  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	b5 c0       	rjmp	.+362    	; 0x1a0 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ef       	ldi	r30, 0xF8	; 248
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 32       	cpi	r26, 0x22	; 34
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e2       	ldi	r26, 0x22	; 34
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a9 32       	cpi	r26, 0x29	; 41
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0b d1       	rcall	.+534    	; 0x2da <main>
  c4:	17 c1       	rjmp	.+558    	; 0x2f4 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <delay_ms>:
			*sevenSeg_Port =	(1<<sevenSeg_A)	|	(1<<sevenSeg_B) |	
								(1<<sevenSeg_G) ;
			break;	
	
		default:
			*sevenSeg_Port =	(1<<sevenSeg_G) ;
  c8:	18 16       	cp	r1, r24
  ca:	19 06       	cpc	r1, r25
  cc:	5c f0       	brlt	.+22     	; 0xe4 <delay_ms+0x1c>
  ce:	08 95       	ret
  d0:	00 00       	nop
  d2:	21 50       	subi	r18, 0x01	; 1
  d4:	31 09       	sbc	r19, r1
  d6:	e1 f7       	brne	.-8      	; 0xd0 <delay_ms+0x8>
  d8:	4f 5f       	subi	r20, 0xFF	; 255
  da:	5f 4f       	sbci	r21, 0xFF	; 255
  dc:	84 17       	cp	r24, r20
  de:	95 07       	cpc	r25, r21
  e0:	19 f4       	brne	.+6      	; 0xe8 <delay_ms+0x20>
  e2:	08 95       	ret
  e4:	40 e0       	ldi	r20, 0x00	; 0
  e6:	50 e0       	ldi	r21, 0x00	; 0
  e8:	27 e0       	ldi	r18, 0x07	; 7
  ea:	33 e0       	ldi	r19, 0x03	; 3
  ec:	f1 cf       	rjmp	.-30     	; 0xd0 <delay_ms+0x8>

000000ee <LCD_WriteCommand>:
  ee:	5e 98       	cbi	0x0b, 6	; 11
  f0:	88 b9       	out	0x08, r24	; 8
  f2:	5f 9a       	sbi	0x0b, 7	; 11
  f4:	00 00       	nop
  f6:	5f 98       	cbi	0x0b, 7	; 11
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	e5 cf       	rjmp	.-54     	; 0xc8 <delay_ms>
  fe:	08 95       	ret

00000100 <LCD_Cursor>:
 100:	81 31       	cpi	r24, 0x11	; 17
 102:	18 f4       	brcc	.+6      	; 0x10a <LCD_Cursor+0xa>
 104:	81 58       	subi	r24, 0x81	; 129
 106:	f3 cf       	rjmp	.-26     	; 0xee <LCD_WriteCommand>
 108:	08 95       	ret
 10a:	81 55       	subi	r24, 0x51	; 81
 10c:	f0 cf       	rjmp	.-32     	; 0xee <LCD_WriteCommand>
 10e:	08 95       	ret

00000110 <LCD_init>:
 110:	84 e6       	ldi	r24, 0x64	; 100
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	d9 df       	rcall	.-78     	; 0xc8 <delay_ms>
 116:	88 e3       	ldi	r24, 0x38	; 56
 118:	ea df       	rcall	.-44     	; 0xee <LCD_WriteCommand>
 11a:	86 e0       	ldi	r24, 0x06	; 6
 11c:	e8 df       	rcall	.-48     	; 0xee <LCD_WriteCommand>
 11e:	8f e0       	ldi	r24, 0x0F	; 15
 120:	e6 df       	rcall	.-52     	; 0xee <LCD_WriteCommand>
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	e4 df       	rcall	.-56     	; 0xee <LCD_WriteCommand>
 126:	8a e0       	ldi	r24, 0x0A	; 10
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	ce cf       	rjmp	.-100    	; 0xc8 <delay_ms>
 12c:	08 95       	ret

0000012e <LCD_Command>:
 12e:	88 b9       	out	0x08, r24	; 8
 130:	5e 98       	cbi	0x0b, 6	; 11
 132:	5d 98       	cbi	0x0b, 5	; 11
 134:	5f 9a       	sbi	0x0b, 7	; 11
 136:	82 e0       	ldi	r24, 0x02	; 2
 138:	8a 95       	dec	r24
 13a:	f1 f7       	brne	.-4      	; 0x138 <LCD_Command+0xa>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <LCD_Command+0x10>
 13e:	5f 98       	cbi	0x0b, 7	; 11
 140:	8f e9       	ldi	r24, 0x9F	; 159
 142:	9f e0       	ldi	r25, 0x0F	; 15
 144:	01 97       	sbiw	r24, 0x01	; 1
 146:	f1 f7       	brne	.-4      	; 0x144 <LCD_Command+0x16>
 148:	00 c0       	rjmp	.+0      	; 0x14a <LCD_Command+0x1c>
 14a:	00 00       	nop
 14c:	08 95       	ret

0000014e <LCD_Char>:
 14e:	88 b9       	out	0x08, r24	; 8
 150:	5e 9a       	sbi	0x0b, 6	; 11
 152:	5d 98       	cbi	0x0b, 5	; 11
 154:	5f 9a       	sbi	0x0b, 7	; 11
 156:	82 e0       	ldi	r24, 0x02	; 2
 158:	8a 95       	dec	r24
 15a:	f1 f7       	brne	.-4      	; 0x158 <LCD_Char+0xa>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <LCD_Char+0x10>
 15e:	5f 98       	cbi	0x0b, 7	; 11
 160:	8f e9       	ldi	r24, 0x9F	; 159
 162:	9f e0       	ldi	r25, 0x0F	; 15
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <LCD_Char+0x16>
 168:	00 c0       	rjmp	.+0      	; 0x16a <LCD_Char+0x1c>
 16a:	00 00       	nop
 16c:	08 95       	ret

0000016e <LCD_Custom_Char>:
 16e:	0f 93       	push	r16
 170:	1f 93       	push	r17
 172:	cf 93       	push	r28
 174:	df 93       	push	r29
 176:	88 30       	cpi	r24, 0x08	; 8
 178:	70 f4       	brcc	.+28     	; 0x196 <LCD_Custom_Char+0x28>
 17a:	8b 01       	movw	r16, r22
 17c:	88 0f       	add	r24, r24
 17e:	88 0f       	add	r24, r24
 180:	88 0f       	add	r24, r24
 182:	80 5c       	subi	r24, 0xC0	; 192
 184:	d4 df       	rcall	.-88     	; 0x12e <LCD_Command>
 186:	e8 01       	movw	r28, r16
 188:	08 5f       	subi	r16, 0xF8	; 248
 18a:	1f 4f       	sbci	r17, 0xFF	; 255
 18c:	89 91       	ld	r24, Y+
 18e:	df df       	rcall	.-66     	; 0x14e <LCD_Char>
 190:	c0 17       	cp	r28, r16
 192:	d1 07       	cpc	r29, r17
 194:	d9 f7       	brne	.-10     	; 0x18c <LCD_Custom_Char+0x1e>
 196:	df 91       	pop	r29
 198:	cf 91       	pop	r28
 19a:	1f 91       	pop	r17
 19c:	0f 91       	pop	r16
 19e:	08 95       	ret

000001a0 <__vector_13>:
 1a0:	1f 92       	push	r1
 1a2:	0f 92       	push	r0
 1a4:	0f b6       	in	r0, 0x3f	; 63
 1a6:	0f 92       	push	r0
 1a8:	11 24       	eor	r1, r1
 1aa:	8f 93       	push	r24
 1ac:	9f 93       	push	r25
 1ae:	af 93       	push	r26
 1b0:	bf 93       	push	r27
 1b2:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <_avr_timer_cntcurr>
 1b6:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <_avr_timer_cntcurr+0x1>
 1ba:	a0 91 26 01 	lds	r26, 0x0126	; 0x800126 <_avr_timer_cntcurr+0x2>
 1be:	b0 91 27 01 	lds	r27, 0x0127	; 0x800127 <_avr_timer_cntcurr+0x3>
 1c2:	01 97       	sbiw	r24, 0x01	; 1
 1c4:	a1 09       	sbc	r26, r1
 1c6:	b1 09       	sbc	r27, r1
 1c8:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <_avr_timer_cntcurr>
 1cc:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <_avr_timer_cntcurr+0x1>
 1d0:	a0 93 26 01 	sts	0x0126, r26	; 0x800126 <_avr_timer_cntcurr+0x2>
 1d4:	b0 93 27 01 	sts	0x0127, r27	; 0x800127 <_avr_timer_cntcurr+0x3>
 1d8:	89 2b       	or	r24, r25
 1da:	8a 2b       	or	r24, r26
 1dc:	8b 2b       	or	r24, r27
 1de:	99 f4       	brne	.+38     	; 0x206 <__vector_13+0x66>
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <TimerFlag>
 1e6:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_avr_timer_M>
 1ea:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_avr_timer_M+0x1>
 1ee:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <_avr_timer_M+0x2>
 1f2:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <_avr_timer_M+0x3>
 1f6:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <_avr_timer_cntcurr>
 1fa:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <_avr_timer_cntcurr+0x1>
 1fe:	a0 93 26 01 	sts	0x0126, r26	; 0x800126 <_avr_timer_cntcurr+0x2>
 202:	b0 93 27 01 	sts	0x0127, r27	; 0x800127 <_avr_timer_cntcurr+0x3>
 206:	bf 91       	pop	r27
 208:	af 91       	pop	r26
 20a:	9f 91       	pop	r25
 20c:	8f 91       	pop	r24
 20e:	0f 90       	pop	r0
 210:	0f be       	out	0x3f, r0	; 63
 212:	0f 90       	pop	r0
 214:	1f 90       	pop	r1
 216:	18 95       	reti

00000218 <staff>:
unsigned char foodway[3] = {2, 9, 28};
unsigned char fxxdway[3] = {7, 20, 26};
	
unsigned int i = 0;
	
void staff(){
 218:	cf 93       	push	r28
 21a:	df 93       	push	r29
 21c:	cd b7       	in	r28, 0x3d	; 61
 21e:	de b7       	in	r29, 0x3e	; 62
 220:	68 97       	sbiw	r28, 0x18	; 24
 222:	0f b6       	in	r0, 0x3f	; 63
 224:	f8 94       	cli
 226:	de bf       	out	0x3e, r29	; 62
 228:	0f be       	out	0x3f, r0	; 63
 22a:	cd bf       	out	0x3d, r28	; 61
	unsigned char caneat[8] = {0x00, 0x0E, 0x17, 0xFF, 0x0A, 0x0A, 0x0E, 0x00};
 22c:	88 e0       	ldi	r24, 0x08	; 8
 22e:	ea e0       	ldi	r30, 0x0A	; 10
 230:	f1 e0       	ldi	r31, 0x01	; 1
 232:	de 01       	movw	r26, r28
 234:	11 96       	adiw	r26, 0x01	; 1
 236:	01 90       	ld	r0, Z+
 238:	0d 92       	st	X+, r0
 23a:	8a 95       	dec	r24
 23c:	e1 f7       	brne	.-8      	; 0x236 <staff+0x1e>
	unsigned char connoteat[8] = {0x0E, 0xFF, 0x15, 0xFF, 0x0A, 0x00, 0x0A, 0x0E};
 23e:	88 e0       	ldi	r24, 0x08	; 8
 240:	e2 e1       	ldi	r30, 0x12	; 18
 242:	f1 e0       	ldi	r31, 0x01	; 1
 244:	de 01       	movw	r26, r28
 246:	19 96       	adiw	r26, 0x09	; 9
 248:	01 90       	ld	r0, Z+
 24a:	0d 92       	st	X+, r0
 24c:	8a 95       	dec	r24
 24e:	e1 f7       	brne	.-8      	; 0x248 <staff+0x30>
	unsigned char player[8] = {0x0E, 0x0E, 0x04, 0xFF, 0x04, 0x0A, 0x0A, 0x0A};
 250:	88 e0       	ldi	r24, 0x08	; 8
 252:	ea e1       	ldi	r30, 0x1A	; 26
 254:	f1 e0       	ldi	r31, 0x01	; 1
 256:	de 01       	movw	r26, r28
 258:	51 96       	adiw	r26, 0x11	; 17
 25a:	01 90       	ld	r0, Z+
 25c:	0d 92       	st	X+, r0
 25e:	8a 95       	dec	r24
 260:	e1 f7       	brne	.-8      	; 0x25a <staff+0x42>
	LCD_Custom_Char(food,caneat);
 262:	be 01       	movw	r22, r28
 264:	6f 5f       	subi	r22, 0xFF	; 255
 266:	7f 4f       	sbci	r23, 0xFF	; 255
 268:	80 e0       	ldi	r24, 0x00	; 0
 26a:	81 df       	rcall	.-254    	; 0x16e <LCD_Custom_Char>
	LCD_Custom_Char(fxxd,connoteat);
 26c:	be 01       	movw	r22, r28
 26e:	67 5f       	subi	r22, 0xF7	; 247
 270:	7f 4f       	sbci	r23, 0xFF	; 255
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	7c df       	rcall	.-264    	; 0x16e <LCD_Custom_Char>
	LCD_Custom_Char(players,player);
 276:	be 01       	movw	r22, r28
 278:	6f 5e       	subi	r22, 0xEF	; 239
 27a:	7f 4f       	sbci	r23, 0xFF	; 255
 27c:	82 e0       	ldi	r24, 0x02	; 2
 27e:	77 df       	rcall	.-274    	; 0x16e <LCD_Custom_Char>
	
}
 280:	68 96       	adiw	r28, 0x18	; 24
 282:	0f b6       	in	r0, 0x3f	; 63
 284:	f8 94       	cli
 286:	de bf       	out	0x3e, r29	; 62
 288:	0f be       	out	0x3f, r0	; 63
 28a:	cd bf       	out	0x3d, r28	; 61
 28c:	df 91       	pop	r29
 28e:	cf 91       	pop	r28
 290:	08 95       	ret

00000292 <displaychar>:

void displaychar(){
	
	for(i=0;i<3;i++){
 292:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <__data_end+0x1>
 296:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <__data_end>
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	90 e0       	ldi	r25, 0x00	; 0
		LCD_Cursor(foodway[i]);
 29e:	fc 01       	movw	r30, r24
 2a0:	ed 5f       	subi	r30, 0xFD	; 253
 2a2:	fe 4f       	sbci	r31, 0xFE	; 254
 2a4:	80 81       	ld	r24, Z
 2a6:	2c df       	rcall	.-424    	; 0x100 <LCD_Cursor>
		LCD_Char(food);
 2a8:	80 e0       	ldi	r24, 0x00	; 0
 2aa:	51 df       	rcall	.-350    	; 0x14e <LCD_Char>
		LCD_Cursor(fxxdway[i]);
 2ac:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <__data_end>
 2b0:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <__data_end+0x1>
 2b4:	e0 50       	subi	r30, 0x00	; 0
 2b6:	ff 4f       	sbci	r31, 0xFF	; 255
 2b8:	80 81       	ld	r24, Z
		LCD_Char(fxxd);	
 2ba:	22 df       	rcall	.-444    	; 0x100 <LCD_Cursor>
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	47 df       	rcall	.-370    	; 0x14e <LCD_Char>
	
}

void displaychar(){
	
	for(i=0;i<3;i++){
 2c0:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 2c4:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
 2c8:	01 96       	adiw	r24, 0x01	; 1
 2ca:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <__data_end+0x1>
 2ce:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__data_end>
 2d2:	83 30       	cpi	r24, 0x03	; 3
 2d4:	91 05       	cpc	r25, r1
 2d6:	18 f3       	brcs	.-58     	; 0x29e <displaychar+0xc>
		LCD_Cursor(foodway[i]);
		LCD_Char(food);
		LCD_Cursor(fxxdway[i]);
		LCD_Char(fxxd);	
	}
}
 2d8:	08 95       	ret

000002da <main>:


int main(void)
{
    /* Replace with your application code */
	DDRA = 0x00;
 2da:	11 b8       	out	0x01, r1	; 1
	DDRB = 0xFF;
 2dc:	8f ef       	ldi	r24, 0xFF	; 255
 2de:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xFF;
 2e0:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xFF;
 2e2:	8a b9       	out	0x0a, r24	; 10
	PORTA = 0xFF;
 2e4:	82 b9       	out	0x02, r24	; 2
	PORTB = 0x00;
 2e6:	15 b8       	out	0x05, r1	; 5
	PORTC = 0x00;
 2e8:	18 b8       	out	0x08, r1	; 8
	PORTD = 0x00;
 2ea:	1b b8       	out	0x0b, r1	; 11
	
	LCD_init();
 2ec:	11 df       	rcall	.-478    	; 0x110 <LCD_init>
	 unsigned short i;//Scheduler for-loop iterator
	 for( i = 1; i < numTasks;i ++){
		 GCD = findGCD(tasks[i]-> period, GCD);
	 }
	 */
	 staff();
 2ee:	94 df       	rcall	.-216    	; 0x218 <staff>
	 displaychar();
 2f0:	d0 df       	rcall	.-96     	; 0x292 <displaychar>
 2f2:	ff cf       	rjmp	.-2      	; 0x2f2 <main+0x18>

000002f4 <_exit>:
 2f4:	f8 94       	cli

000002f6 <__stop_program>:
 2f6:	ff cf       	rjmp	.-2      	; 0x2f6 <__stop_program>
